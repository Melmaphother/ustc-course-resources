算法复现，考试时间基本花在这个上面。老生常谈的手算DP/最短路/红黑树操作，记得细心一点。

算法设计有两题

1.Z上给定n包括在[1,100]内的闭区间，求最小的整数k，使得k不被任何一个区间包括。

没啥好说的，给个思路：O(1)区间加，O(n)统计的数据结构就能解决这个题目，因此用差分序列就行，时空都是O(n)。（考试的时候区间加下表都少写了1，我有罪）

2.有向图上，每个节点有标号，对i属于1-n，求min(i)为节点i可以访问到的编号最小的点的编号。

老师给的思路是两遍dfs，第二遍和第一遍反着来，就能按顺序统计出来，不过当时我也有点听蒙蔽了。

这里给一个思路：

如果这是张没有环的有向图，那么解法显然，按照拓扑序递推就行；

但是题目没有给无环图的限制，那么一个自然的思路是去掉图里的环，容易想到强联通分量缩点；

然后考虑这题有个很好的性质：如果两个点在同一个强连通分量里面，那么他们的min就一定相同（设A到达mA，B到达mB，都是可到达最小的，AB又相互可达，那么A就能到达mB，因此mA和mB一定相同），然后结果就出来了。

图G先算强连通分量，缩点，缩出来一张DAG图G1。G1上每一个点都代表G上的强连通分量，统计一下每个分量里面最小的编号作为初始答案。然后在G1上直接递推就出答案了。不过此解法虽然比较自然，试卷上写代码量好像多了点。